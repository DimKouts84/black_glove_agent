[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "black-glove"
version = "0.1.0"
description = "A local-first, CLI-driven, LLM-assisted penetration-testing agent for home security testing"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Mitsos_PC", email = "mitsos@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration"
]
requires-python = ">=3.8"
dependencies = [
    "typer>=0.9.0",
    "requests>=2.31.0",
    "pydantic>=2.0.0",
    "docker>=6.0.0",
    "PyYAML>=6.0.0",
    "aiohttp>=3.8.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0"
]

[project.scripts]
agent = "agent.__main__:app"

[project.urls]
Homepage = "https://github.com/mitsos-pc/black-glove"
Documentation = "https://github.com/mitsos-pc/black-glove/blob/main/docs/README.md"
Repository = "https://github.com/mitsos-pc/black-glove.git"
Issues = "https://github.com/mitsos-pc/black-glove/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=agent",
    "--cov-report=html",
    "--cov-report=term-missing"
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
